= Example Choclates Document

Here is an example choclates file, 'example.choc':

    extension: html

    --- rdoc erb

    = Yummy Choclate 

    Hi <%= name %>,

    I know you want some of that yummy stuff.

    --- coderay.ruby

      %{c h o c o l a t e s}.each do |letter|
        puts "Give me a #{letter}!"
      end

      puts "What's that spell?"

    --- html liquid

    <quote>
      {{ yield }}
    </quote>

    --- textile

    |                | 2009 | 2010 |
    | Has Choclates? |  No  | Yes! |

    --- markdown

    As you can see. It's all _fun_ and _games_ here.

= Loading the Library

Require the library.

    require 'chocolates'

= Reading a Cholcates File

Load our example template[fixtures/example.choc].

    file = "qed/fixtures/example.choc"

    document = Chocolates::Document.new(file)

= Rendering Data Sources

Chocolates uses Malt on the backend. Malt supports a three separate ways to pass
data into a template.

The most obvious data source is a Hash.

    data = {:name=>"Tom"}

    text = document.render(data).to_s

    text.assert =~ /Hi Tom/

Templates can also be rendered given a Binding.

    name = "Huck"

    text = document.render(binding).to_s

    text.assert =~ /Hi Huck/

And lastly, they can be renderedwith the scope of any other type of Object,
including an instance of a Struct.

    scope = Struct.new(:name).new("Becky")

    text = document.render(scope).to_s

    text.assert =~ /Hi Becky/

